---
- name: Create directory
  file:
    path: '{{ item.path }}'
    state: directory
    owner: '{{ item.user | default(harbor_user) }}'
    group: '{{ harbor_group }}'
  with_items: 
    - { path: '{{ harbor_service_path }}'                 }
    - { path: '{{ harbor_service_config_path }}'          }
    - { path: '{{ harbor_cache_cont_vol_data }}'          , user: '{{ harbor_cache_host_uid }}'       }
    - { path: '{{ harbor_core_cont_vol_config }}'         , user: '{{ harbor_core_host_uid }}'        }
    - { path: '{{ harbor_core_cont_vol_data }}'         , user: '{{ harbor_core_host_uid }}'        }
    - { path: '{{ harbor_portal_cont_vol_config }}'       , user: '{{ harbor_portal_host_uid }}'      }
    - { path: '{{ harbor_job_service_cont_vol_config }}'  }
    - { path: '{{ harbor_registryctl_cont_vol_config }}'  , user: '{{ harbor_registryctl_host_uid }}' }
    - { path: '{{ harbor_registry_cont_vol_config }}'     , user: '{{ harbor_registryctl_host_uid }}' }
    - { path: '{{ harbor_exporter_cont_vol_config }}'     }
    - { path: '{{ harbor_job_service_cont_vol_jobs }}'    }
    - { path: '{{ harbor_proxy_cont_vol_config }}'        , user: '{{ harbor_proxy_host_uid }}'       }
    - { path: '{{ harbor_registry_cont_vol_data }}'       , user: '{{ harbor_registry_host_uid }}'    }
    - { path: '{{harbor_registry_cont_vol_config }}'      , user: '{{ harbor_registry_host_uid }}'    }
    - { path: '{{ harbor_db_cont_vol_config }}'           , user: '{{ harbor_db_host_uid }}'          }
    - { path: '{{ harbor_db_cont_vol_data }}'             , user: '{{ harbor_db_host_uid}}'           }


- name: Create compose file
  template:
    src: 'docker-compose.yml.j2'
    dest: '{{ harbor_service_path }}/docker-compose.yml'
    owner: '{{ harbor_user }}'
    group: '{{ harbor_group }}'
    mode: 0640

- name: Create configuration file
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: '{{ item.user | default(harbor_user) }}'
    group: '{{ harbor_group }}'
    mode: 0640
  with_items: 
    - { src: 'config/core/env.j2',                dest: '{{ harbor_core_cont_vol_config }}/env',                user: '{{ harbor_core_host_uid }}'        }
    - { src: 'config/core/app.conf.j2',           dest: '{{ harbor_core_cont_vol_config }}/app.conf',           user: '{{ harbor_core_host_uid }}'        }
    - { src: 'config/core/secretkey.j2',          dest: '{{ harbor_core_cont_vol_data }}/secretkey',            user: '{{ harbor_core_host_uid }}'        }
    - { src: 'config/db/env.j2',                  dest: '{{ harbor_db_cont_vol_config }}/env'                   }
    - { src: 'config/registryctl/env.j2',         dest: '{{ harbor_registryctl_cont_vol_config }}/env',         user: '{{ harbor_registryctl_host_uid}}'  }
    - { src: 'config/registryctl/config.yml.j2',  dest: '{{ harbor_registryctl_cont_vol_config }}/config.yml',  user: '{{ harbor_registryctl_host_uid}}'  }
    - { src: 'config/registry/config.yml.j2',     dest: '{{ harbor_registry_cont_vol_config }}/config.yml',     user: '{{ harbor_registry_host_uid }}'    }
    - { src: 'config/registry/passwd.j2',         dest: '{{ harbor_registry_cont_vol_config }}/passwd',         user: '{{ harbor_registry_host_uid }}'    } 
    - { src: 'config/jobservice/env.j2',          dest: '{{ harbor_job_service_cont_vol_config }}/env',         user: '{{ harbor_job_service_host_uid }}' }
    - { src: 'config/jobservice/config.yml.j2',   dest: '{{ harbor_job_service_cont_vol_config }}/config.yml',  user: '{{ harbor_job_service_host_uid }}' }
    - { src: 'config/exporter/env.j2',            dest: '{{ harbor_exporter_cont_vol_config }}/env'             }
    - { src: 'config/proxy/nginx.conf.j2',        dest: '{{ harbor_proxy_cont_vol_config }}/nginx.conf',        user: '{{ harbor_proxy_host_uid }}'       }
    - { src: 'config/portal/nginx.conf.j2',       dest: '{{ harbor_portal_cont_vol_config }}/nginx.conf',       user: '{{ harbor_portal_host_uid }}'      }
    - { src: 'config/registry/key.j2',            dest: '{{ harbor_registry_cont_vol_config }}/key',            user: '{{ harbor_registry_host_uid }}'    }

- name: Create containers
  docker_compose:
    project_src: '{{ harbor_service_path }}'
    build: true
    state: '{{ compose_state }}'
    restarted: '{{ compose_restart }}'
    recreate: '{{ compose_recreate }}'
  register: harbor_containers
